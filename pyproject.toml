[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hatch-aws"
version = "0.2.1"
description = 'Hatch plugin for building AWS Lambda functions with SAM'
readme = "README.md"
requires-python = ">=3.7"
license = { file = "LICENSE.txt" }
keywords = ["hatch", "aws", "plugin", "sam", "lambda"]
authors = [{ name = "aka-raccoon", email = "aka-raccoon@pm.me" }]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Framework :: Hatch",
]
dependencies = ["hatchling", "PyYAML"]

[project.optional-dependencies]
dev = ["bandit[toml]", "black", "isort", "mypy", "pylint", "types-PyYAML"]
test = ["coverage", "pytest", "pytest-cov", "pytest-mock", "tomli_w"]


[project.entry-points.hatch]
aws = "hatch_aws.hooks"

[project.urls]
Documentation = "https://github.com/aka-raccoon/hatch-aws#readme"
Issues = "https://github.com/aka-raccoon/hatch-aws/issues"
Source = "https://github.com/aka-raccoon/hatch-aws"


[tool.coverage.run]
branch = true
parallel = true
source = ["hatch_aws"]
omit = ["src/hatch_aws/hooks.py"]

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 70

[tool.hatch.envs.default]
features = ["dev", "test"]

[tool.hatch.envs.default.scripts]
check = [
  "pylint src/",
  "black --check --diff src/",
  "isort --check-only --diff src/",
  "mypy --install-types --non-interactive src/",
  "bandit -r --configfile pyproject.toml src/",
]
format = ["black src/", "isort src/"]

[tool.hatch.envs.test]
features = ["test"]

[tool.hatch.envs.test.scripts]
unit = "pytest -m 'not integration' --cov"
integration = "pytest -m 'integration'"

[tool.hatch.envs.sam]
dependencies = ["aws-sam-cli"]

[[tool.hatch.envs.test.matrix]]
python = ["3.7", "3.8", "3.9", "3.10"]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"

[tool.pylint.messages_control]
disable = [
  "missing-module-docstring",
  "missing-class-docstring",
  "missing-function-docstring",
]

[tool.pylint.format]
max-line-length = 100

[tool.bandit]
exclude_dirs = ["tests/"]

[tool.mypy]
namespace_packages = true
ignore_missing_imports = true
explicit_package_bases = true
warn_return_any = false
warn_unused_configs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks integration tests (deselect with '-m \"not integration\"')",
  "serial",
]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.1"
version_files = ["pyproject.toml:^version"]
tag_format = "$version"
bump_message = "bump: $current_version â†’ $new_version"
